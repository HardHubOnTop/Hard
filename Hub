local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\71\233","\98\105\199\54\221\132\119\173"),function(v42) if (v9(v42,2)==79) then local v103=0;while true do if (v103==0) then v30=v8(v11(v42,1,1));return "";end end else local v104=v10(v8(v42,1502 -(998 + 488) ));if v30 then local v110=0;local v111;while true do if (v110==1) then return v111;end if (v110==0) then v111=v13(v104,v30);v30=nil;v110=1;end end else return v104;end end end);local function v31(v43,v44,v45) if v45 then local v105=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v105-(v105%1) ;else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (1==v48) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + (5 -3) ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + (8 -5) );v29=v29 + 4 ;v51=1;end end end local function v35() local v56=v34();local v57=v34();local v58=1 + 0 ;local v59=(v31(v57,1,20) * (2^32)) + v56 ;local v60=v31(v57,21,31);local v61=((v31(v57,32)==1) and  -(1 + 0)) or 1 ;if (v60==(772 -(201 + 571))) then if (v59==(1138 -(116 + 1022))) then return v61 * 0 ;else local v112=0;while true do if (v112==0) then v60=1;v58=0 -0 ;break;end end end elseif (v60==2047) then return ((v59==(0 -0)) and (v61 * ((1 + 0)/0))) or (v61 * NaN) ;end return v16(v61,v60-(2635 -1612) ) * (v58 + (v59/(2^52))) ;end local function v36(v62) local v63;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=1, #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v80=1,v69 do local v81=0;local v82;local v83;while true do if (v81==1) then if (v82==1) then v83=v32()~=(0 -0) ;elseif (v82==2) then v83=v35();elseif (v82==3) then v83=v36();end v70[v80]=v83;break;end if (v81==0) then v82=v32();v83=nil;v81=1;end end end v68[3]=v32();for v84=1,v34() do local v85=0;local v86;while true do if (0==v85) then v86=v32();if (v31(v86,1,1)==0) then local v120=v31(v86,2,3);local v121=v31(v86,4,6);local v122={v33(),v33(),nil,nil};if (v120==0) then local v124=0;while true do if (v124==0) then v122[3]=v33();v122[935 -(857 + 74) ]=v33();break;end end elseif (v120==(2 -1)) then v122[1 + 2 ]=v34();elseif (v120==2) then v122[3]=v34() -((570 -(367 + 201))^16) ;elseif (v120==(2 + 1)) then local v135=0;while true do if (v135==0) then v122[930 -(214 + 713) ]=v34() -((1 + 1)^16) ;v122[4]=v33();break;end end end if (v31(v121,1,1)==1) then v122[2]=v70[v122[2]];end if (v31(v121,2,2)==1) then v122[3]=v70[v122[3]];end if (v31(v121,3,3)==1) then v122[4]=v70[v122[4]];end v65[v84]=v122;end break;end end end for v87=1,v34() do v66[v87-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v89=v75;local v90=v76;local v91=v77;local v92=v38;local v93=1 + 0 ;local v94= -1;local v95={};local v96={...};local v97=v20("#",...) -(878 -(282 + 595)) ;local v98={};local v99={};for v108=885 -(261 + 624) ,v97 do if (v108>=v91) then v95[v108-v91 ]=v96[v108 + 1 ];else v99[v108]=v96[v108 + (1 -0) ];end end local v100=(v97-v91) + (1081 -(1020 + 60)) ;local v101;local v102;while true do local v109=0;while true do if (0==v109) then v101=v89[v93];v102=v101[1];v109=1;end if (v109==1) then if (v102<=45) then if (v102<=(1659 -(1523 + 114))) then if (v102<=10) then if (v102<=(4 + 0)) then if (v102<=1) then if (v102==(0 -0)) then local v138=v101[2];do return v21(v99,v138,v94);end else local v139=0;local v140;while true do if (v139==0) then v140=v101[2];v99[v140]=v99[v140](v21(v99,v140 + 1 ,v94));break;end end end elseif (v102<=2) then v99[v101[1067 -(68 + 997) ]]={};elseif (v102==3) then local v198=v101[2];local v199,v200=v92(v99[v198](v21(v99,v198 + 1 ,v101[3])));v94=(v200 + v198) -(1424 -(630 + 793)) ;local v201=0;for v308=v198,v94 do v201=v201 + (1271 -(226 + 1044)) ;v99[v308]=v199[v201];end else v99[v101[2]]=v101[3]~=0 ;end elseif (v102<=7) then if (v102<=5) then v99[v101[2]]();elseif (v102>(19 -13)) then local v203=0;local v204;local v205;while true do if (1==v203) then for v377=1, #v98 do local v378=0;local v379;while true do if (0==v378) then v379=v98[v377];for v435=0 -0 , #v379 do local v436=0;local v437;local v438;local v439;while true do if (v436==1) then v439=v437[2];if ((v438==v99) and (v439>=v204)) then local v461=0;while true do if (0==v461) then v205[v439]=v438[v439];v437[1]=v205;break;end end end break;end if (v436==0) then v437=v379[v435];v438=v437[1];v436=1;end end end break;end end end break;end if (0==v203) then v204=v101[2];v205={};v203=1;end end else v99[v101[2]]=v99[v101[3]]%v101[4] ;end elseif (v102<=8) then local v142=0;local v143;while true do if (v142==0) then v143=v101[1 + 1 ];v99[v143](v21(v99,v143 + 1 ,v94));break;end end elseif (v102>9) then local v207=0;local v208;local v209;local v210;while true do if (v207==1) then v210=v99[v208 + 2 ];if (v210>0) then if (v209>v99[v208 + (4 -3) ]) then v93=v101[3];else v99[v208 + 3 ]=v209;end elseif (v209<v99[v208 + (3 -2) ]) then v93=v101[3];else v99[v208 + (120 -(32 + 85)) ]=v209;end break;end if (0==v207) then v208=v101[2];v209=v99[v208];v207=1;end end else v99[v101[2]]= #v99[v101[3]];end elseif (v102<=16) then if (v102<=13) then if (v102<=11) then local v144=0;local v145;while true do if (0==v144) then v145=v101[1749 -(760 + 987) ];do return v99[v145](v21(v99,v145 + 1 ,v101[3]));end break;end end elseif (v102==12) then v99[v101[2]][v101[3]]=v99[v101[4]];else v99[v101[2]]=v101[3];end elseif (v102<=14) then local v146=0;local v147;local v148;while true do if (v146==0) then v147=v101[2];v148=v99[v147];v146=1;end if (v146==1) then for v325=v147 + 1 ,v94 do v15(v148,v99[v325]);end break;end end elseif (v102==15) then v93=v101[3 + 0 ];else v99[v101[1 + 1 ]]=v99[v101[3]] + v99[v101[1917 -(1789 + 124) ]] ;end elseif (v102<=19) then if (v102<=17) then v99[v101[768 -(745 + 21) ]]=v99[v101[3]] + v101[4] ;elseif (v102>18) then if (v99[v101[2]]~=v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end else local v218=0;local v219;local v220;local v221;while true do if (v218==2) then for v380=1,v101[4] do local v381=0;local v382;while true do if (0==v381) then v93=v93 + 1 ;v382=v89[v93];v381=1;end if (v381==1) then if (v382[1 -0 ]==(1 + 32)) then v221[v380-1 ]={v99,v382[3 + 0 ]};else v221[v380-1 ]={v73,v382[3]};end v98[ #v98 + 1 ]=v221;break;end end end v99[v101[2]]=v40(v219,v220,v74);break;end if (v218==0) then v219=v90[v101[3]];v220=nil;v218=1;end if (1==v218) then v221={};v220=v18({},{[v7("\51\188\40\12\49\232\216","\217\108\227\65\98\85\141\160")]=function(v383,v384) local v385=0;local v386;while true do if (v385==0) then v386=v221[v384];return v386[1 + 0 ][v386[959 -(892 + 65) ]];end end end,[v7("\202\218\34\59\212\252\235\40\59\219","\163\149\133\76\94")]=function(v387,v388,v389) local v390=0;local v391;while true do if (v390==0) then v391=v221[v388];v391[1][v391[4 -2 ]]=v389;break;end end end});v218=2;end end end elseif (v102<=20) then v99[v101[2]]=v99[v101[3]];elseif (v102>21) then local v222=0;local v223;local v224;while true do if (v222==1) then for v392=1, #v98 do local v393=0;local v394;while true do if (v393==0) then v394=v98[v392];for v440=1055 -(87 + 968) , #v394 do local v441=0;local v442;local v443;local v444;while true do if (v441==0) then v442=v394[v440];v443=v442[1];v441=1;end if (v441==1) then v444=v442[2];if ((v443==v99) and (v444>=v223)) then v224[v444]=v443[v444];v442[1]=v224;end break;end end end break;end end end break;end if (v222==0) then v223=v101[2];v224={};v222=1;end end else v99[v101[2]]=v101[4 -1 ]~=0 ;end elseif (v102<=33) then if (v102<=27) then if (v102<=24) then if (v102>23) then if (v99[v101[2]]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end else local v152=v101[2];v99[v152]=v99[v152](v21(v99,v152 + 1 ,v94));end elseif (v102<=25) then v99[v101[2]]=v99[v101[3]] + v99[v101[4]] ;elseif (v102>26) then local v227=0;local v228;local v229;local v230;local v231;while true do if (v227==1) then v94=(v230 + v228) -1 ;v231=0;v227=2;end if (v227==2) then for v395=v228,v94 do local v396=0;while true do if (v396==0) then v231=v231 + 1 ;v99[v395]=v229[v231];break;end end end break;end if (v227==0) then v228=v101[2];v229,v230=v92(v99[v228](v21(v99,v228 + 1 ,v94)));v227=1;end end elseif (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=30) then if (v102<=28) then for v196=v101[2],v101[3] do v99[v196]=nil;end elseif (v102==29) then local v232=0;local v233;while true do if (v232==0) then v233=v101[2];v99[v233]=v99[v233]();break;end end else do return;end end elseif (v102<=(381 -(87 + 263))) then if (v99[v101[2]]==v99[v101[184 -(67 + 113) ]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102>32) then v99[v101[2]]=v99[v101[3 + 0 ]];else v99[v101[2]]=v99[v101[3]] -v99[v101[4]] ;end elseif (v102<=39) then if (v102<=36) then if (v102<=34) then v99[v101[2]]=v73[v101[7 -4 ]];elseif (v102==(154 -119)) then local v238=0;local v239;local v240;local v241;while true do if (1==v238) then v241=v99[v239] + v240 ;v99[v239]=v241;v238=2;end if (v238==2) then if (v240>(0 + 0)) then if (v241<=v99[v239 + 1 ]) then local v425=0;while true do if (v425==0) then v93=v101[3];v99[v239 + 3 ]=v241;break;end end end elseif (v241>=v99[v239 + 1 ]) then local v426=0;while true do if (v426==0) then v93=v101[3];v99[v239 + 3 ]=v241;break;end end end break;end if (0==v238) then v239=v101[2];v240=v99[v239 + 2 ];v238=1;end end else v99[v101[2]]=v99[v101[3 + 0 ]]%v99[v101[8 -4 ]] ;end elseif (v102<=37) then local v157=0;local v158;while true do if (v157==0) then v158=v101[2];v99[v158](v99[v158 + 1 ]);break;end end elseif (v102==38) then v99[v101[2]]();else v99[v101[7 -5 ]]=v99[v101[3]] -v99[v101[956 -(802 + 150) ]] ;end elseif (v102<=(1455 -(447 + 966))) then if (v102<=40) then v99[v101[2]][v101[3]]=v101[4];elseif (v102==41) then v99[v101[2]]=v99[v101[3]] + v101[4] ;elseif v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=(117 -74)) then v73[v101[1820 -(1703 + 114) ]]=v99[v101[703 -(376 + 325) ]];elseif (v102==44) then local v245=0;local v246;while true do if (0==v245) then v246=v101[2];v99[v246]=v99[v246](v21(v99,v246 + 1 ,v101[3]));break;end end else local v247=0;local v248;local v249;local v250;local v251;while true do if (v247==2) then for v397=v248,v94 do v251=v251 + 1 + 0 ;v99[v397]=v249[v251];end break;end if (v247==0) then v248=v101[2];v249,v250=v92(v99[v248](v99[v248 + (1 -0) ]));v247=1;end if (v247==1) then v94=(v250 + v248) -(2 -1) ;v251=0;v247=2;end end end elseif (v102<=(149 -81)) then if (v102<=56) then if (v102<=50) then if (v102<=47) then if (v102==46) then v99[v101[2]]= #v99[v101[7 -4 ]];else local v164=0;local v165;local v166;local v167;while true do if (v164==0) then v165=v101[2];v166=v99[v165];v164=1;end if (v164==1) then v167=v99[v165 + 2 ];if (v167>0) then if (v166>v99[v165 + 1 ]) then v93=v101[3];else v99[v165 + 3 ]=v166;end elseif (v166<v99[v165 + 1 ]) then v93=v101[3];else v99[v165 + 3 ]=v166;end break;end end end elseif (v102<=48) then local v168=0;local v169;while true do if (v168==0) then v169=v101[2];v99[v169](v99[v169 + 1 ]);break;end end elseif (v102==49) then local v252=0;local v253;while true do if (v252==0) then v253=v101[2];v99[v253](v21(v99,v253 + 1 ,v101[3]));break;end end elseif (v99[v101[2]]==v101[6 -2 ]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=53) then if (v102<=51) then v99[v101[2]]=v99[v101[3]][v101[4]];elseif (v102==52) then local v254=0;local v255;local v256;while true do if (v254==0) then v255=v101[2];v256=v99[v255];v254=1;end if (v254==1) then for v400=v255 + 1 ,v94 do v15(v256,v99[v400]);end break;end end else v73[v101[3]]=v99[v101[2]];end elseif (v102<=54) then do return v99[v101[2]]();end elseif (v102>(41 + 14)) then if v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end else v99[v101[2]]=v74[v101[379 -(85 + 291) ]];end elseif (v102<=(1327 -(243 + 1022))) then if (v102<=(1056 -(915 + 82))) then if (v102<=57) then v99[v101[7 -5 ]][v99[v101[3]]]=v101[4];elseif (v102>(164 -106)) then local v261=0;local v262;local v263;local v264;local v265;while true do if (v261==1) then v94=(v264 + v262) -(1 + 0) ;v265=0;v261=2;end if (v261==2) then for v401=v262,v94 do local v402=0;while true do if (v402==0) then v265=v265 + 1 ;v99[v401]=v263[v265];break;end end end break;end if (v261==0) then v262=v101[2];v263,v264=v92(v99[v262](v21(v99,v262 + 1 ,v101[3])));v261=1;end end else v99[v101[2]]=v99[v101[3]]%v101[1184 -(1123 + 57) ] ;end elseif (v102<=60) then local v174=0;local v175;local v176;local v177;local v178;while true do if (v174==2) then for v331=v175,v94 do v178=v178 + (255 -(163 + 91)) ;v99[v331]=v176[v178];end break;end if (v174==1) then v94=(v177 + v175) -1 ;v178=0;v174=2;end if (v174==0) then v175=v101[2 + 0 ];v176,v177=v92(v99[v175](v99[v175 + 1 ]));v174=1;end end elseif (v102==61) then local v267=0;local v268;local v269;local v270;local v271;while true do if (v267==1) then v94=(v270 + v268) -(1 -0) ;v271=0;v267=2;end if (v267==2) then for v403=v268,v94 do local v404=0;while true do if (v404==0) then v271=v271 + 1 ;v99[v403]=v269[v271];break;end end end break;end if (v267==0) then v268=v101[2 + 0 ];v269,v270=v92(v99[v268](v21(v99,v268 + 1 ,v94)));v267=1;end end else v99[v101[2]][v99[v101[1933 -(1869 + 61) ]]]=v99[v101[4]];end elseif (v102<=65) then if (v102<=63) then v99[v101[1189 -(1069 + 118) ]]=v101[6 -3 ] + v99[v101[4]] ;elseif (v102>64) then if (v99[v101[1 + 1 ]]~=v99[v101[4]]) then v93=v93 + (3 -2) ;else v93=v101[3];end else v99[v101[2]]=v99[v101[3]][v101[8 -4 ]];end elseif (v102<=66) then local v180=v101[2];v99[v180]=v99[v180]();elseif (v102>67) then v99[v101[2]][v99[v101[3]]]=v99[v101[4]];else local v278=v101[2];v99[v278](v21(v99,v278 + 1 ,v101[3]));end elseif (v102<=(14 + 65)) then if (v102<=(111 -38)) then if (v102<=(10 + 60)) then if (v102==(121 -52)) then v99[v101[2]]={};else v99[v101[2 -0 ]]=v74[v101[3]];end elseif (v102<=(71 + 0)) then local v185=0;local v186;local v187;local v188;while true do if (2==v185) then for v335=1,v101[795 -(368 + 423) ] do local v336=0;local v337;while true do if (1==v336) then if (v337[1]==33) then v188[v335-(19 -(10 + 8)) ]={v99,v337[3]};else v188[v335-1 ]={v73,v337[3]};end v98[ #v98 + (3 -2) ]=v188;break;end if (v336==0) then v93=v93 + (3 -2) ;v337=v89[v93];v336=1;end end end v99[v101[2]]=v40(v186,v187,v74);break;end if (v185==0) then v186=v90[v101[3]];v187=nil;v185=1;end if (v185==1) then v188={};v187=v18({},{[v7("\159\50\38\40\241\49\206","\182\192\109\79\70\149\84")]=function(v338,v339) local v340=0;local v341;while true do if (0==v340) then v341=v188[v339];return v341[1][v341[2]];end end end,[v7("\255\101\227\61\23\201\84\233\61\24","\96\160\58\141\88")]=function(v342,v343,v344) local v345=v188[v343];v345[1][v345[1476 -(1329 + 145) ]]=v344;end});v185=2;end end elseif (v102>72) then local v279=v101[2];local v280=v99[v101[1853 -(1409 + 441) ]];v99[v279 + 1 ]=v280;v99[v279]=v280[v101[722 -(15 + 703) ]];else local v284=0;local v285;while true do if (v284==0) then v285=v101[1 + 1 ];do return v21(v99,v285,v94);end break;end end end elseif (v102<=76) then if (v102<=74) then v93=v101[3];elseif (v102>(517 -(416 + 26))) then v99[v101[2]][v101[3]]=v101[4];elseif  not v99[v101[2]] then v93=v93 + (3 -2) ;else v93=v101[3];end elseif (v102<=77) then do return v99[v101[2]]();end elseif (v102>78) then local v288=0;local v289;while true do if (v288==0) then v289=v101[2];do return v99[v289](v21(v99,v289 + 1 ,v101[1724 -(345 + 1376) ]));end break;end end else v99[v101[2]][v101[3]]=v99[v101[2 + 2 ]];end elseif (v102<=85) then if (v102<=82) then if (v102<=80) then v99[v101[2]]=v101[3];elseif (v102>81) then local v292=0;local v293;local v294;local v295;while true do if (2==v292) then if (v294>0) then if (v295<=v99[v293 + 1 ]) then local v433=0;while true do if (v433==0) then v93=v101[3];v99[v293 + 3 ]=v295;break;end end end elseif (v295>=v99[v293 + 1 ]) then local v434=0;while true do if (v434==0) then v93=v101[3];v99[v293 + 3 ]=v295;break;end end end break;end if (v292==0) then v293=v101[2];v294=v99[v293 + 2 ];v292=1;end if (v292==1) then v295=v99[v293] + v294 ;v99[v293]=v295;v292=2;end end else v99[v101[2]][v99[v101[3]]]=v101[4];end elseif (v102<=83) then v99[v101[2]]=v73[v101[4 -1 ]];elseif (v102>84) then local v298=v101[440 -(145 + 293) ];v99[v298](v21(v99,v298 + 1 ,v94));else local v299=0;local v300;while true do if (v299==0) then v300=v101[2];v99[v300]=v99[v300](v21(v99,v300 + 1 ,v101[3]));break;end end end elseif (v102<=88) then if (v102<=86) then v99[v101[2]]=v101[3] + v99[v101[4]] ;elseif (v102>87) then local v301=v101[690 -(198 + 490) ];local v302=v99[v101[3]];v99[v301 + (4 -3) ]=v302;v99[v301]=v302[v101[434 -(44 + 386) ]];elseif  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=89) then v99[v101[4 -2 ]]=v99[v101[3]]%v99[v101[4]] ;elseif (v102==90) then do return;end else for v323=v101[2],v101[3] do v99[v323]=nil;end end v93=v93 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
